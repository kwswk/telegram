[flake8]
format = wemake
show-source = true

max-line-length = 88
max-annotation-complexity = 4
multiline-quotes = '''

application_import_names = my_application

# Docs on errors: https://wemake-python-stylegui.de/en/latest/pages/usage/violations/index.html
ignore =
    # WPS235: Found too many imported names from a module  -- too strict for typing
    WPS235,
    # WPS300: Found local folder import  -- disabled to allow importing from local implementation modules
    WPS300,
    # WPS301: Found dotted raw import  -- the proposed import schema leads to names overriding
    WPS301,
    # WPS305: Found `f` string
    WPS305,
    # WPS318: Found extra indentation  -- works incorrectly with functions defs
    WPS318,
    # WPS348: Found a line that starts with a dot  -- same as N400
    WPS348,
    # WPS529: Found implicit `.get()` dict usage  -- quite controversial
    WPS529,
    # D100: Missing docstring in public module
    D100,
    # D101: Missing docstring in public class
    D101,
    # D102: Missing docstring in public method
    D102,
    # D103: Missing docstring in public function  -- better give descriptive names
    D103,
    # D105: Missing docstring in magic method  -- magic method is self-descriptive
    D104,
    # D104: Missing docstring in public package
    D105,
    # D107: Missing docstring in __init__
    D107,
    # D202: No blank lines allowed after function docstring
    D202,
    # D210: No whitespaces allowed surrounding docstring text
    D210,
    # D400: First line should end with a period
    D400,
    # DAR101: Missing parameter(s) in Docstring
    DAR101,
    # DAR201: Missing "Returns" in Docstring
    DAR201,
    # DAR401: Missing exception(s) in Raises section
    DAR401,
    # N400: Found backslash that is used for line breaking  -- examples look strange
    N400,
    # W503: line break before binary operator  -- W504 is enabled instead
    W503,
    # C408: Unnecessary dict call - rewrite as a literal  -- dict() call looks like kwargs which is not arbitrary
    C408,
    # W605 invalid escape sequence -- falsely triggered by regex
    W605,
    # I001  isort found an import in the wrong position
    I001


extend-select =
    # W504: line break after binary operator  -- enabled instead of W503
    W504,

per-file-ignores =
    tests/*:
        # WPS214: Found too many methods  -- why limit number of tests?
        WPS214,
        # WPS450: Found protected object import
        WPS450,
        # WPS609: Found direct magic attribute usage  -- useful for mocks attributes assertions
        WPS609,
        # I001: isort found an import in the wrong position  -- works improperly with protected imports
        I001,
        # S106: Possible hardcoded password  -- suspicious literals are ok for tests
        S106,
    src/dags/*:
        # WPS428: Found statement that has no effect  -- reports bitshift operators defining operators dependencies
        WPS428
    src/dags/airflow_update_ecr_connection.py:
        # S404: Consider possible security implications associated with subprocess module
        S404,
        # S603: subprocess call - check for execution of untrusted input
        S603,
    src/dags/export_from_cassandra_to_athena.py:
        # WPS202 Found too many module members
        WPS202,
        #  WPS226 Found string constant over-use: prod
        WPS226,
        # from src/dags/*
        WPS428,
    src/dags/repair_partitions.py:
        # WPS226 Found string constant over-use: .csv, load_ts_partition â€¦
        WPS226,
    src/operators/*.py:
        # WPS211: Found too many arguments  -- Airflow operators have many parameters
        WPS211,
    src/utils/notifications.py:
        # WPS202: Found too many module members  -- useful to extend variety of notification callbacks
        WPS202,


[isort]
# See https://github.com/timothycrosley/isort#multi-line-output-modes
multi_line_output = 2
line_length = 80
# This setting imitates installing of 3rd-party packages for proper linting
known_third_party = airflow,boto3
